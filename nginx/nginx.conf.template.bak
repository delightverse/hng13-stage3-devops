# Custom JSON log format with all required observability fields
log_format detailed_json escape=json
    '{'
    '"timestamp":"$time_iso8601",'
    '"remote_addr":"$remote_addr",'
    '"request_method":"$request_method",'
    '"request_uri":"$request_uri",'
    '"http_version":"$server_protocol",'
    '"status":$status,'
    '"body_bytes_sent":$body_bytes_sent,'
    '"request_time":$request_time,'
    '"upstream_addr":"$upstream_addr",'
    '"upstream_status":"$upstream_status",'
    '"upstream_response_time":"$upstream_response_time",'
    '"upstream_connect_time":"$upstream_connect_time",'
    '"pool":"$upstream_http_x_app_pool",'
    '"release":"$upstream_http_x_release_id",'
    '"referer":"$http_referer",'
    '"user_agent":"$http_user_agent"'
    '}';

# Upstream configuration (Blue/Green with primary/backup pattern)
upstream app_backend {
    # Primary pool (Blue by default)
    server app_blue:3000 max_fails=1 fail_timeout=10s;
    
    # Backup pool (Green) - only receives traffic when Blue is down
    server app_green:3000 backup max_fails=1 fail_timeout=10s;
}

server {
    listen 80;
    server_name _;

    # Use custom JSON log format
    access_log /var/log/nginx/access.log detailed_json;
    error_log /var/log/nginx/error.log warn;

    location / {
        proxy_pass http://app_backend;
        
        # Retry policy: try next upstream on these conditions
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
        
        # Aggressive timeouts for fast failover detection
        proxy_connect_timeout 2s;
        proxy_send_timeout 3s;
        proxy_read_timeout 3s;
        
        # CRITICAL: Forward upstream headers to client
        proxy_pass_request_headers on;
        
        # Explicitly forward the app headers
        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
        
        # Don't hide upstream headers
        proxy_hide_header X-App-Pool;  # Un-hide if hidden by default
        proxy_hide_header X-Release-Id;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # HTTP version
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Health check endpoint for monitoring
    location /nginx-health {
        access_log off;
        return 200 "NGINX OK\n";
        add_header Content-Type text/plain;
    }
}
